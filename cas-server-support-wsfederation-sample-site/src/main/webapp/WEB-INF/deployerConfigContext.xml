<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to Jasig under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Jasig licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License.  You may obtain a
    copy of the License at the following location:

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<!--
    | deployerConfigContext.xml centralizes into one file some of the declarative configuration that
    | all CAS deployers will need to modify.
    |
    | This file declares some of the Spring-managed JavaBeans that make up a CAS deployment.
    | The beans declared in this file are instantiated at context initialization time by the Spring
    | ContextLoaderListener declared in web.xml.  It finds this file because this
    | file is among those declared in the context parameter "contextConfigLocation".
    |
    | By far the most common change you will need to make in this file is to change the last bean
    | declaration to replace the default SimpleTestUsernamePasswordAuthenticationHandler with
    | one implementing your approach for authenticating usernames and passwords.
    +-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:sec="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <bean id="authenticationManager" class="org.jasig.cas.authentication.PolicyBasedAuthenticationManager">
        <constructor-arg>
            <map>
                <entry key-ref="proxyAuthenticationHandler" value-ref="proxyPrincipalResolver" />
                <entry key-ref="primaryAuthenticationHandler" value-ref="primaryPrincipalResolver" />
            </map>
        </constructor-arg>

        <property name="authenticationPolicy">
            <bean class="org.jasig.cas.authentication.AnyAuthenticationPolicy" />
        </property>
    </bean>

    <bean id="primaryPrincipalResolver" class="net.unicon.cas.support.wsfederation.authentication.principal.WsFederationCredentialsToPrincipalResolver">
        <property name="configuration" ref="wsFedConfig" />
    </bean>

    <bean id="primaryAuthenticationHandler" class="net.unicon.cas.support.wsfederation.authentication.handler.support.WsFederationAuthenticationHandler" />

    <bean id="proxyAuthenticationHandler"
          class="org.jasig.cas.authentication.handler.support.HttpBasedServiceCredentialsAuthenticationHandler"
          p:httpClient-ref="httpClient" />

    <!-- Required for proxy ticket mechanism -->
    <bean id="proxyPrincipalResolver"
          class="org.jasig.cas.authentication.principal.BasicPrincipalResolver" />


    <sec:user-service id="userDetailsService">
        <sec:user name="admin"   password="notused" authorities="ROLE_ADMIN" />
    </sec:user-service>

    <bean id="attributeRepository"
        class="org.jasig.services.persondir.support.StubPersonAttributeDao">
                <!-- The attributes that are being made available must be listed here. -->
        <property name="backingMap">
            <map>
                <entry key="FirstName" value="" />
                <entry key="LastName" value="" />
                <entry key="Email" value="" />
                <entry key="Telephone" value="" />
                <entry key="Groups" value="" />
                <entry key="UserType" value="" />
                <entry key="UDC_IDENTIFIER" value="" />
            </map>
        </property>
    </bean>

    <!--
     Sample, in-memory data store for the ServiceRegistry. A real implementation
     would probably want to replace this with the JPA-backed ServiceRegistry DAO
     The name of this bean should remain "serviceRegistryDao".
     -->
    <bean
        id="serviceRegistryDao"
        class="org.jasig.cas.services.InMemoryServiceRegistryDaoImpl">
        <property name="registeredServices">
            <list>
                <bean class="org.jasig.cas.services.RegexRegisteredService">
                    <property name="id" value="0" />
                    <property name="name" value="HTTP and IMAP" />
                    <property name="description" value="Allows HTTP(S) and IMAP(S) protocols" />
                    <property name="serviceId" value="^(https?)://.*" />
                    <property name="evaluationOrder" value="10000001" />
                </bean>
                <!--
                 Use the following definition instead of the above to further restrict access
                 to services within your domain (including subdomains).
                 Note that example.com must be replaced with the domain you wish to permit.
                 -->
                <!--
                 <bean class="org.jasig.cas.services.RegexRegisteredService">
                 <property name="id" value="1" />
                 <property name="name" value="HTTP and IMAP on example.com" />
                 <property name="description" value="Allows HTTP(S) and IMAP(S) protocols on example.com" />
                 <property name="serviceId" value="^(https?|imaps?)://([A-Za-z0-9_-]+\.)*example\.com/.*" />
                 <property name="evaluationOrder" value="0" />
                 </bean>
                 -->
            </list>
        </property>
    </bean>
    
    <bean id="auditTrailManager" class="com.github.inspektr.audit.support.Slf4jLoggingAuditTrailManager" />
    
    <bean id="healthCheckMonitor" class="org.jasig.cas.monitor.HealthCheckMonitor">
        <property name="monitors">
            <list>
                <bean class="org.jasig.cas.monitor.MemoryMonitor"
                p:freeMemoryWarnThreshold="10" />
                <!--
                 NOTE
                 The following ticket registries support SessionMonitor:
                 * DefaultTicketRegistry
                 * JpaTicketRegistry
                 Remove this monitor if you use an unsupported registry.
                 -->
                <bean class="org.jasig.cas.monitor.SessionMonitor"
                p:ticketRegistry-ref="ticketRegistry"
                p:serviceTicketCountWarnThreshold="5000"
                p:sessionCountWarnThreshold="100000" />
            </list>
        </property>
    </bean>
</beans>
